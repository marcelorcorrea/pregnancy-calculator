apply plugin: 'java'
apply plugin: 'maven'

group 'com.marcelorcorrea'
version '1.0-SNAPSHOT'
description = """TBD"""

repositories {
  mavenLocal()
  mavenCentral()
}
buildscript {
  repositories {
    mavenCentral()
    maven { url "https://plugins.gradle.org/m2/" }
  }
  dependencies {
    classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:1.3.60"
    classpath "io.spring.gradle:dependency-management-plugin:1.0.3.RELEASE"
    classpath "com.github.jengelman.gradle.plugins:shadow:2.0.1"
    classpath "de.sebastianboegl.gradle.plugins:shadow-log4j-transformer:2.1.1"
  }
}
apply plugin: 'kotlin'
apply plugin: "io.spring.dependency-management"
apply plugin: 'com.github.johnrengelman.shadow'
apply plugin: "de.sebastianboegl.shadow.transformer.log4j"

repositories {
  mavenLocal()
  maven { url "http://repo.maven.apache.org/maven2" }
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    compile group: 'com.hp.kalexa', name: 'kalexa-sdk', version: '0.5.0'
    compile group: 'org.apache.httpcomponents', name: 'httpclient', version: '4.5.6'
    compile group: 'org.apache.httpcomponents', name: 'httpmime', version: '4.5.6'
    compile group: 'mysql', name: 'mysql-connector-java', version: '8.0.18'
    compile group: 'org.jetbrains.kotlinx', name: 'kotlinx-coroutines-core', version: '1.3.2'
    compile 'com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:2.10.1'
    testImplementation "org.spekframework.spek2:spek-dsl-jvm:2.0.8"
    testRuntimeOnly "org.spekframework.spek2:spek-runner-junit5:2.0.8"
    testRuntimeOnly "org.jetbrains.kotlin:kotlin-reflect:1.3.60"
    testCompile group: 'io.mockk', name: 'mockk', version: '1.9.3'
    testCompile group: 'org.jetbrains.kotlin', name: 'kotlin-test-junit', version: '1.3.60'
}
test {
    useJUnitPlatform {
        includeEngines 'spek2'
    }
}

compileKotlin {
  kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
  kotlinOptions.jvmTarget = "1.8"
}
task buildZip(type: Zip) {
  from compileKotlin
  from processResources
  into('lib') {
    from configurations.runtime
  }
}

task deploy(type: Exec, dependsOn: 'shadowJar') {
  commandLine 'serverless', 'deploy'
}
build.dependsOn buildZip
